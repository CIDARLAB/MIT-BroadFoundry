Pro_GenieX is a tool for creating yeast promoters.

It uses a greedy constraint based algorithm to generate sequences of defined nucleotide content
and then splices in motifs, which is also a greedy constraint algorithm.

The program is written in python and requires Excel read capability (xlrd) and regular expressions (re).

There are also several functions that remove undesired motifs, such as TypeIIS sites that may arise by 
chance in a sequence.  Furthermore, there are functions that record every substitution the program has made, 
as well as an analysis package that uses regular expressions to perform a wider search for motifs that not only 
were substituted, but may also have arisen by chance.  All of this data is stored in a number of text files.

As I am learning Python as I go, I apologize for the many unPythonic infractions and possibly
ugly, incomprehensible way I have organized this program.  I have tried to make up for the 
lack of experience with frequent comments in all of the files. It works in IDLE, and I will work
to get a functional version up and running here.
